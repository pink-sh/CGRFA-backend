package org.fao.fir.cgrfa.dao.mapper.model;

import java.util.ArrayList;
import java.util.List;

public class SpeciesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public SpeciesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andValueIsNull() {
            addCriterion("value is null");
            return (Criteria) this;
        }

        public Criteria andValueIsNotNull() {
            addCriterion("value is not null");
            return (Criteria) this;
        }

        public Criteria andValueEqualTo(String value) {
            addCriterion("value =", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueNotEqualTo(String value) {
            addCriterion("value <>", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueGreaterThan(String value) {
            addCriterion("value >", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueGreaterThanOrEqualTo(String value) {
            addCriterion("value >=", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueLessThan(String value) {
            addCriterion("value <", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueLessThanOrEqualTo(String value) {
            addCriterion("value <=", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueLike(String value) {
            addCriterion("value like", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueNotLike(String value) {
            addCriterion("value not like", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueIn(List<String> values) {
            addCriterion("value in", values, "value");
            return (Criteria) this;
        }

        public Criteria andValueNotIn(List<String> values) {
            addCriterion("value not in", values, "value");
            return (Criteria) this;
        }

        public Criteria andValueBetween(String value1, String value2) {
            addCriterion("value between", value1, value2, "value");
            return (Criteria) this;
        }

        public Criteria andValueNotBetween(String value1, String value2) {
            addCriterion("value not between", value1, value2, "value");
            return (Criteria) this;
        }

        public Criteria andNameEIsNull() {
            addCriterion("name_e is null");
            return (Criteria) this;
        }

        public Criteria andNameEIsNotNull() {
            addCriterion("name_e is not null");
            return (Criteria) this;
        }

        public Criteria andNameEEqualTo(String value) {
            addCriterion("name_e =", value, "nameE");
            return (Criteria) this;
        }

        public Criteria andNameENotEqualTo(String value) {
            addCriterion("name_e <>", value, "nameE");
            return (Criteria) this;
        }

        public Criteria andNameEGreaterThan(String value) {
            addCriterion("name_e >", value, "nameE");
            return (Criteria) this;
        }

        public Criteria andNameEGreaterThanOrEqualTo(String value) {
            addCriterion("name_e >=", value, "nameE");
            return (Criteria) this;
        }

        public Criteria andNameELessThan(String value) {
            addCriterion("name_e <", value, "nameE");
            return (Criteria) this;
        }

        public Criteria andNameELessThanOrEqualTo(String value) {
            addCriterion("name_e <=", value, "nameE");
            return (Criteria) this;
        }

        public Criteria andNameELike(String value) {
            addCriterion("name_e like", value, "nameE");
            return (Criteria) this;
        }

        public Criteria andNameENotLike(String value) {
            addCriterion("name_e not like", value, "nameE");
            return (Criteria) this;
        }

        public Criteria andNameEIn(List<String> values) {
            addCriterion("name_e in", values, "nameE");
            return (Criteria) this;
        }

        public Criteria andNameENotIn(List<String> values) {
            addCriterion("name_e not in", values, "nameE");
            return (Criteria) this;
        }

        public Criteria andNameEBetween(String value1, String value2) {
            addCriterion("name_e between", value1, value2, "nameE");
            return (Criteria) this;
        }

        public Criteria andNameENotBetween(String value1, String value2) {
            addCriterion("name_e not between", value1, value2, "nameE");
            return (Criteria) this;
        }

        public Criteria andNameFIsNull() {
            addCriterion("name_f is null");
            return (Criteria) this;
        }

        public Criteria andNameFIsNotNull() {
            addCriterion("name_f is not null");
            return (Criteria) this;
        }

        public Criteria andNameFEqualTo(String value) {
            addCriterion("name_f =", value, "nameF");
            return (Criteria) this;
        }

        public Criteria andNameFNotEqualTo(String value) {
            addCriterion("name_f <>", value, "nameF");
            return (Criteria) this;
        }

        public Criteria andNameFGreaterThan(String value) {
            addCriterion("name_f >", value, "nameF");
            return (Criteria) this;
        }

        public Criteria andNameFGreaterThanOrEqualTo(String value) {
            addCriterion("name_f >=", value, "nameF");
            return (Criteria) this;
        }

        public Criteria andNameFLessThan(String value) {
            addCriterion("name_f <", value, "nameF");
            return (Criteria) this;
        }

        public Criteria andNameFLessThanOrEqualTo(String value) {
            addCriterion("name_f <=", value, "nameF");
            return (Criteria) this;
        }

        public Criteria andNameFLike(String value) {
            addCriterion("name_f like", value, "nameF");
            return (Criteria) this;
        }

        public Criteria andNameFNotLike(String value) {
            addCriterion("name_f not like", value, "nameF");
            return (Criteria) this;
        }

        public Criteria andNameFIn(List<String> values) {
            addCriterion("name_f in", values, "nameF");
            return (Criteria) this;
        }

        public Criteria andNameFNotIn(List<String> values) {
            addCriterion("name_f not in", values, "nameF");
            return (Criteria) this;
        }

        public Criteria andNameFBetween(String value1, String value2) {
            addCriterion("name_f between", value1, value2, "nameF");
            return (Criteria) this;
        }

        public Criteria andNameFNotBetween(String value1, String value2) {
            addCriterion("name_f not between", value1, value2, "nameF");
            return (Criteria) this;
        }

        public Criteria andNameSIsNull() {
            addCriterion("name_s is null");
            return (Criteria) this;
        }

        public Criteria andNameSIsNotNull() {
            addCriterion("name_s is not null");
            return (Criteria) this;
        }

        public Criteria andNameSEqualTo(String value) {
            addCriterion("name_s =", value, "nameS");
            return (Criteria) this;
        }

        public Criteria andNameSNotEqualTo(String value) {
            addCriterion("name_s <>", value, "nameS");
            return (Criteria) this;
        }

        public Criteria andNameSGreaterThan(String value) {
            addCriterion("name_s >", value, "nameS");
            return (Criteria) this;
        }

        public Criteria andNameSGreaterThanOrEqualTo(String value) {
            addCriterion("name_s >=", value, "nameS");
            return (Criteria) this;
        }

        public Criteria andNameSLessThan(String value) {
            addCriterion("name_s <", value, "nameS");
            return (Criteria) this;
        }

        public Criteria andNameSLessThanOrEqualTo(String value) {
            addCriterion("name_s <=", value, "nameS");
            return (Criteria) this;
        }

        public Criteria andNameSLike(String value) {
            addCriterion("name_s like", value, "nameS");
            return (Criteria) this;
        }

        public Criteria andNameSNotLike(String value) {
            addCriterion("name_s not like", value, "nameS");
            return (Criteria) this;
        }

        public Criteria andNameSIn(List<String> values) {
            addCriterion("name_s in", values, "nameS");
            return (Criteria) this;
        }

        public Criteria andNameSNotIn(List<String> values) {
            addCriterion("name_s not in", values, "nameS");
            return (Criteria) this;
        }

        public Criteria andNameSBetween(String value1, String value2) {
            addCriterion("name_s between", value1, value2, "nameS");
            return (Criteria) this;
        }

        public Criteria andNameSNotBetween(String value1, String value2) {
            addCriterion("name_s not between", value1, value2, "nameS");
            return (Criteria) this;
        }

        public Criteria andNameCIsNull() {
            addCriterion("name_c is null");
            return (Criteria) this;
        }

        public Criteria andNameCIsNotNull() {
            addCriterion("name_c is not null");
            return (Criteria) this;
        }

        public Criteria andNameCEqualTo(String value) {
            addCriterion("name_c =", value, "nameC");
            return (Criteria) this;
        }

        public Criteria andNameCNotEqualTo(String value) {
            addCriterion("name_c <>", value, "nameC");
            return (Criteria) this;
        }

        public Criteria andNameCGreaterThan(String value) {
            addCriterion("name_c >", value, "nameC");
            return (Criteria) this;
        }

        public Criteria andNameCGreaterThanOrEqualTo(String value) {
            addCriterion("name_c >=", value, "nameC");
            return (Criteria) this;
        }

        public Criteria andNameCLessThan(String value) {
            addCriterion("name_c <", value, "nameC");
            return (Criteria) this;
        }

        public Criteria andNameCLessThanOrEqualTo(String value) {
            addCriterion("name_c <=", value, "nameC");
            return (Criteria) this;
        }

        public Criteria andNameCLike(String value) {
            addCriterion("name_c like", value, "nameC");
            return (Criteria) this;
        }

        public Criteria andNameCNotLike(String value) {
            addCriterion("name_c not like", value, "nameC");
            return (Criteria) this;
        }

        public Criteria andNameCIn(List<String> values) {
            addCriterion("name_c in", values, "nameC");
            return (Criteria) this;
        }

        public Criteria andNameCNotIn(List<String> values) {
            addCriterion("name_c not in", values, "nameC");
            return (Criteria) this;
        }

        public Criteria andNameCBetween(String value1, String value2) {
            addCriterion("name_c between", value1, value2, "nameC");
            return (Criteria) this;
        }

        public Criteria andNameCNotBetween(String value1, String value2) {
            addCriterion("name_c not between", value1, value2, "nameC");
            return (Criteria) this;
        }

        public Criteria andNameRIsNull() {
            addCriterion("name_r is null");
            return (Criteria) this;
        }

        public Criteria andNameRIsNotNull() {
            addCriterion("name_r is not null");
            return (Criteria) this;
        }

        public Criteria andNameREqualTo(String value) {
            addCriterion("name_r =", value, "nameR");
            return (Criteria) this;
        }

        public Criteria andNameRNotEqualTo(String value) {
            addCriterion("name_r <>", value, "nameR");
            return (Criteria) this;
        }

        public Criteria andNameRGreaterThan(String value) {
            addCriterion("name_r >", value, "nameR");
            return (Criteria) this;
        }

        public Criteria andNameRGreaterThanOrEqualTo(String value) {
            addCriterion("name_r >=", value, "nameR");
            return (Criteria) this;
        }

        public Criteria andNameRLessThan(String value) {
            addCriterion("name_r <", value, "nameR");
            return (Criteria) this;
        }

        public Criteria andNameRLessThanOrEqualTo(String value) {
            addCriterion("name_r <=", value, "nameR");
            return (Criteria) this;
        }

        public Criteria andNameRLike(String value) {
            addCriterion("name_r like", value, "nameR");
            return (Criteria) this;
        }

        public Criteria andNameRNotLike(String value) {
            addCriterion("name_r not like", value, "nameR");
            return (Criteria) this;
        }

        public Criteria andNameRIn(List<String> values) {
            addCriterion("name_r in", values, "nameR");
            return (Criteria) this;
        }

        public Criteria andNameRNotIn(List<String> values) {
            addCriterion("name_r not in", values, "nameR");
            return (Criteria) this;
        }

        public Criteria andNameRBetween(String value1, String value2) {
            addCriterion("name_r between", value1, value2, "nameR");
            return (Criteria) this;
        }

        public Criteria andNameRNotBetween(String value1, String value2) {
            addCriterion("name_r not between", value1, value2, "nameR");
            return (Criteria) this;
        }

        public Criteria andNameAIsNull() {
            addCriterion("name_a is null");
            return (Criteria) this;
        }

        public Criteria andNameAIsNotNull() {
            addCriterion("name_a is not null");
            return (Criteria) this;
        }

        public Criteria andNameAEqualTo(String value) {
            addCriterion("name_a =", value, "nameA");
            return (Criteria) this;
        }

        public Criteria andNameANotEqualTo(String value) {
            addCriterion("name_a <>", value, "nameA");
            return (Criteria) this;
        }

        public Criteria andNameAGreaterThan(String value) {
            addCriterion("name_a >", value, "nameA");
            return (Criteria) this;
        }

        public Criteria andNameAGreaterThanOrEqualTo(String value) {
            addCriterion("name_a >=", value, "nameA");
            return (Criteria) this;
        }

        public Criteria andNameALessThan(String value) {
            addCriterion("name_a <", value, "nameA");
            return (Criteria) this;
        }

        public Criteria andNameALessThanOrEqualTo(String value) {
            addCriterion("name_a <=", value, "nameA");
            return (Criteria) this;
        }

        public Criteria andNameALike(String value) {
            addCriterion("name_a like", value, "nameA");
            return (Criteria) this;
        }

        public Criteria andNameANotLike(String value) {
            addCriterion("name_a not like", value, "nameA");
            return (Criteria) this;
        }

        public Criteria andNameAIn(List<String> values) {
            addCriterion("name_a in", values, "nameA");
            return (Criteria) this;
        }

        public Criteria andNameANotIn(List<String> values) {
            addCriterion("name_a not in", values, "nameA");
            return (Criteria) this;
        }

        public Criteria andNameABetween(String value1, String value2) {
            addCriterion("name_a between", value1, value2, "nameA");
            return (Criteria) this;
        }

        public Criteria andNameANotBetween(String value1, String value2) {
            addCriterion("name_a not between", value1, value2, "nameA");
            return (Criteria) this;
        }

        public Criteria andScientificNameIsNull() {
            addCriterion("scientific_name is null");
            return (Criteria) this;
        }

        public Criteria andScientificNameIsNotNull() {
            addCriterion("scientific_name is not null");
            return (Criteria) this;
        }

        public Criteria andScientificNameEqualTo(String value) {
            addCriterion("scientific_name =", value, "scientificName");
            return (Criteria) this;
        }

        public Criteria andScientificNameNotEqualTo(String value) {
            addCriterion("scientific_name <>", value, "scientificName");
            return (Criteria) this;
        }

        public Criteria andScientificNameGreaterThan(String value) {
            addCriterion("scientific_name >", value, "scientificName");
            return (Criteria) this;
        }

        public Criteria andScientificNameGreaterThanOrEqualTo(String value) {
            addCriterion("scientific_name >=", value, "scientificName");
            return (Criteria) this;
        }

        public Criteria andScientificNameLessThan(String value) {
            addCriterion("scientific_name <", value, "scientificName");
            return (Criteria) this;
        }

        public Criteria andScientificNameLessThanOrEqualTo(String value) {
            addCriterion("scientific_name <=", value, "scientificName");
            return (Criteria) this;
        }

        public Criteria andScientificNameLike(String value) {
            addCriterion("scientific_name like", value, "scientificName");
            return (Criteria) this;
        }

        public Criteria andScientificNameNotLike(String value) {
            addCriterion("scientific_name not like", value, "scientificName");
            return (Criteria) this;
        }

        public Criteria andScientificNameIn(List<String> values) {
            addCriterion("scientific_name in", values, "scientificName");
            return (Criteria) this;
        }

        public Criteria andScientificNameNotIn(List<String> values) {
            addCriterion("scientific_name not in", values, "scientificName");
            return (Criteria) this;
        }

        public Criteria andScientificNameBetween(String value1, String value2) {
            addCriterion("scientific_name between", value1, value2, "scientificName");
            return (Criteria) this;
        }

        public Criteria andScientificNameNotBetween(String value1, String value2) {
            addCriterion("scientific_name not between", value1, value2, "scientificName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.Species
     *
     * @mbg.generated do_not_delete_during_merge Tue Oct 10 14:03:47 CEST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.Species
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}