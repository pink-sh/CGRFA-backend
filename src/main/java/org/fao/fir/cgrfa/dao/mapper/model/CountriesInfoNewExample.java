package org.fao.fir.cgrfa.dao.mapper.model;

import java.util.ArrayList;
import java.util.List;

public class CountriesInfoNewExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public CountriesInfoNewExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUncodeIsNull() {
            addCriterion("UnCode is null");
            return (Criteria) this;
        }

        public Criteria andUncodeIsNotNull() {
            addCriterion("UnCode is not null");
            return (Criteria) this;
        }

        public Criteria andUncodeEqualTo(Integer value) {
            addCriterion("UnCode =", value, "uncode");
            return (Criteria) this;
        }

        public Criteria andUncodeNotEqualTo(Integer value) {
            addCriterion("UnCode <>", value, "uncode");
            return (Criteria) this;
        }

        public Criteria andUncodeGreaterThan(Integer value) {
            addCriterion("UnCode >", value, "uncode");
            return (Criteria) this;
        }

        public Criteria andUncodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("UnCode >=", value, "uncode");
            return (Criteria) this;
        }

        public Criteria andUncodeLessThan(Integer value) {
            addCriterion("UnCode <", value, "uncode");
            return (Criteria) this;
        }

        public Criteria andUncodeLessThanOrEqualTo(Integer value) {
            addCriterion("UnCode <=", value, "uncode");
            return (Criteria) this;
        }

        public Criteria andUncodeIn(List<Integer> values) {
            addCriterion("UnCode in", values, "uncode");
            return (Criteria) this;
        }

        public Criteria andUncodeNotIn(List<Integer> values) {
            addCriterion("UnCode not in", values, "uncode");
            return (Criteria) this;
        }

        public Criteria andUncodeBetween(Integer value1, Integer value2) {
            addCriterion("UnCode between", value1, value2, "uncode");
            return (Criteria) this;
        }

        public Criteria andUncodeNotBetween(Integer value1, Integer value2) {
            addCriterion("UnCode not between", value1, value2, "uncode");
            return (Criteria) this;
        }

        public Criteria andUseIsNull() {
            addCriterion("Use is null");
            return (Criteria) this;
        }

        public Criteria andUseIsNotNull() {
            addCriterion("Use is not null");
            return (Criteria) this;
        }

        public Criteria andUseEqualTo(String value) {
            addCriterion("Use =", value, "use");
            return (Criteria) this;
        }

        public Criteria andUseNotEqualTo(String value) {
            addCriterion("Use <>", value, "use");
            return (Criteria) this;
        }

        public Criteria andUseGreaterThan(String value) {
            addCriterion("Use >", value, "use");
            return (Criteria) this;
        }

        public Criteria andUseGreaterThanOrEqualTo(String value) {
            addCriterion("Use >=", value, "use");
            return (Criteria) this;
        }

        public Criteria andUseLessThan(String value) {
            addCriterion("Use <", value, "use");
            return (Criteria) this;
        }

        public Criteria andUseLessThanOrEqualTo(String value) {
            addCriterion("Use <=", value, "use");
            return (Criteria) this;
        }

        public Criteria andUseLike(String value) {
            addCriterion("Use like", value, "use");
            return (Criteria) this;
        }

        public Criteria andUseNotLike(String value) {
            addCriterion("Use not like", value, "use");
            return (Criteria) this;
        }

        public Criteria andUseIn(List<String> values) {
            addCriterion("Use in", values, "use");
            return (Criteria) this;
        }

        public Criteria andUseNotIn(List<String> values) {
            addCriterion("Use not in", values, "use");
            return (Criteria) this;
        }

        public Criteria andUseBetween(String value1, String value2) {
            addCriterion("Use between", value1, value2, "use");
            return (Criteria) this;
        }

        public Criteria andUseNotBetween(String value1, String value2) {
            addCriterion("Use not between", value1, value2, "use");
            return (Criteria) this;
        }

        public Criteria andCgrfaIsNull() {
            addCriterion("Cgrfa is null");
            return (Criteria) this;
        }

        public Criteria andCgrfaIsNotNull() {
            addCriterion("Cgrfa is not null");
            return (Criteria) this;
        }

        public Criteria andCgrfaEqualTo(Integer value) {
            addCriterion("Cgrfa =", value, "cgrfa");
            return (Criteria) this;
        }

        public Criteria andCgrfaNotEqualTo(Integer value) {
            addCriterion("Cgrfa <>", value, "cgrfa");
            return (Criteria) this;
        }

        public Criteria andCgrfaGreaterThan(Integer value) {
            addCriterion("Cgrfa >", value, "cgrfa");
            return (Criteria) this;
        }

        public Criteria andCgrfaGreaterThanOrEqualTo(Integer value) {
            addCriterion("Cgrfa >=", value, "cgrfa");
            return (Criteria) this;
        }

        public Criteria andCgrfaLessThan(Integer value) {
            addCriterion("Cgrfa <", value, "cgrfa");
            return (Criteria) this;
        }

        public Criteria andCgrfaLessThanOrEqualTo(Integer value) {
            addCriterion("Cgrfa <=", value, "cgrfa");
            return (Criteria) this;
        }

        public Criteria andCgrfaIn(List<Integer> values) {
            addCriterion("Cgrfa in", values, "cgrfa");
            return (Criteria) this;
        }

        public Criteria andCgrfaNotIn(List<Integer> values) {
            addCriterion("Cgrfa not in", values, "cgrfa");
            return (Criteria) this;
        }

        public Criteria andCgrfaBetween(Integer value1, Integer value2) {
            addCriterion("Cgrfa between", value1, value2, "cgrfa");
            return (Criteria) this;
        }

        public Criteria andCgrfaNotBetween(Integer value1, Integer value2) {
            addCriterion("Cgrfa not between", value1, value2, "cgrfa");
            return (Criteria) this;
        }

        public Criteria andFaostatIsNull() {
            addCriterion("Faostat is null");
            return (Criteria) this;
        }

        public Criteria andFaostatIsNotNull() {
            addCriterion("Faostat is not null");
            return (Criteria) this;
        }

        public Criteria andFaostatEqualTo(Integer value) {
            addCriterion("Faostat =", value, "faostat");
            return (Criteria) this;
        }

        public Criteria andFaostatNotEqualTo(Integer value) {
            addCriterion("Faostat <>", value, "faostat");
            return (Criteria) this;
        }

        public Criteria andFaostatGreaterThan(Integer value) {
            addCriterion("Faostat >", value, "faostat");
            return (Criteria) this;
        }

        public Criteria andFaostatGreaterThanOrEqualTo(Integer value) {
            addCriterion("Faostat >=", value, "faostat");
            return (Criteria) this;
        }

        public Criteria andFaostatLessThan(Integer value) {
            addCriterion("Faostat <", value, "faostat");
            return (Criteria) this;
        }

        public Criteria andFaostatLessThanOrEqualTo(Integer value) {
            addCriterion("Faostat <=", value, "faostat");
            return (Criteria) this;
        }

        public Criteria andFaostatIn(List<Integer> values) {
            addCriterion("Faostat in", values, "faostat");
            return (Criteria) this;
        }

        public Criteria andFaostatNotIn(List<Integer> values) {
            addCriterion("Faostat not in", values, "faostat");
            return (Criteria) this;
        }

        public Criteria andFaostatBetween(Integer value1, Integer value2) {
            addCriterion("Faostat between", value1, value2, "faostat");
            return (Criteria) this;
        }

        public Criteria andFaostatNotBetween(Integer value1, Integer value2) {
            addCriterion("Faostat not between", value1, value2, "faostat");
            return (Criteria) this;
        }

        public Criteria andFigisIsNull() {
            addCriterion("Figis is null");
            return (Criteria) this;
        }

        public Criteria andFigisIsNotNull() {
            addCriterion("Figis is not null");
            return (Criteria) this;
        }

        public Criteria andFigisEqualTo(Integer value) {
            addCriterion("Figis =", value, "figis");
            return (Criteria) this;
        }

        public Criteria andFigisNotEqualTo(Integer value) {
            addCriterion("Figis <>", value, "figis");
            return (Criteria) this;
        }

        public Criteria andFigisGreaterThan(Integer value) {
            addCriterion("Figis >", value, "figis");
            return (Criteria) this;
        }

        public Criteria andFigisGreaterThanOrEqualTo(Integer value) {
            addCriterion("Figis >=", value, "figis");
            return (Criteria) this;
        }

        public Criteria andFigisLessThan(Integer value) {
            addCriterion("Figis <", value, "figis");
            return (Criteria) this;
        }

        public Criteria andFigisLessThanOrEqualTo(Integer value) {
            addCriterion("Figis <=", value, "figis");
            return (Criteria) this;
        }

        public Criteria andFigisIn(List<Integer> values) {
            addCriterion("Figis in", values, "figis");
            return (Criteria) this;
        }

        public Criteria andFigisNotIn(List<Integer> values) {
            addCriterion("Figis not in", values, "figis");
            return (Criteria) this;
        }

        public Criteria andFigisBetween(Integer value1, Integer value2) {
            addCriterion("Figis between", value1, value2, "figis");
            return (Criteria) this;
        }

        public Criteria andFigisNotBetween(Integer value1, Integer value2) {
            addCriterion("Figis not between", value1, value2, "figis");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("Name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("Name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("Name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("Name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("Name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("Name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("Name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("Name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("Name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("Name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("Name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("Name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("Name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("Name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andIso3IsNull() {
            addCriterion("Iso3 is null");
            return (Criteria) this;
        }

        public Criteria andIso3IsNotNull() {
            addCriterion("Iso3 is not null");
            return (Criteria) this;
        }

        public Criteria andIso3EqualTo(String value) {
            addCriterion("Iso3 =", value, "iso3");
            return (Criteria) this;
        }

        public Criteria andIso3NotEqualTo(String value) {
            addCriterion("Iso3 <>", value, "iso3");
            return (Criteria) this;
        }

        public Criteria andIso3GreaterThan(String value) {
            addCriterion("Iso3 >", value, "iso3");
            return (Criteria) this;
        }

        public Criteria andIso3GreaterThanOrEqualTo(String value) {
            addCriterion("Iso3 >=", value, "iso3");
            return (Criteria) this;
        }

        public Criteria andIso3LessThan(String value) {
            addCriterion("Iso3 <", value, "iso3");
            return (Criteria) this;
        }

        public Criteria andIso3LessThanOrEqualTo(String value) {
            addCriterion("Iso3 <=", value, "iso3");
            return (Criteria) this;
        }

        public Criteria andIso3Like(String value) {
            addCriterion("Iso3 like", value, "iso3");
            return (Criteria) this;
        }

        public Criteria andIso3NotLike(String value) {
            addCriterion("Iso3 not like", value, "iso3");
            return (Criteria) this;
        }

        public Criteria andIso3In(List<String> values) {
            addCriterion("Iso3 in", values, "iso3");
            return (Criteria) this;
        }

        public Criteria andIso3NotIn(List<String> values) {
            addCriterion("Iso3 not in", values, "iso3");
            return (Criteria) this;
        }

        public Criteria andIso3Between(String value1, String value2) {
            addCriterion("Iso3 between", value1, value2, "iso3");
            return (Criteria) this;
        }

        public Criteria andIso3NotBetween(String value1, String value2) {
            addCriterion("Iso3 not between", value1, value2, "iso3");
            return (Criteria) this;
        }

        public Criteria andPositionIsNull() {
            addCriterion("Position is null");
            return (Criteria) this;
        }

        public Criteria andPositionIsNotNull() {
            addCriterion("Position is not null");
            return (Criteria) this;
        }

        public Criteria andPositionEqualTo(Integer value) {
            addCriterion("Position =", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionNotEqualTo(Integer value) {
            addCriterion("Position <>", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionGreaterThan(Integer value) {
            addCriterion("Position >", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionGreaterThanOrEqualTo(Integer value) {
            addCriterion("Position >=", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionLessThan(Integer value) {
            addCriterion("Position <", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionLessThanOrEqualTo(Integer value) {
            addCriterion("Position <=", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionIn(List<Integer> values) {
            addCriterion("Position in", values, "position");
            return (Criteria) this;
        }

        public Criteria andPositionNotIn(List<Integer> values) {
            addCriterion("Position not in", values, "position");
            return (Criteria) this;
        }

        public Criteria andPositionBetween(Integer value1, Integer value2) {
            addCriterion("Position between", value1, value2, "position");
            return (Criteria) this;
        }

        public Criteria andPositionNotBetween(Integer value1, Integer value2) {
            addCriterion("Position not between", value1, value2, "position");
            return (Criteria) this;
        }

        public Criteria andLanguageIsNull() {
            addCriterion("Language is null");
            return (Criteria) this;
        }

        public Criteria andLanguageIsNotNull() {
            addCriterion("Language is not null");
            return (Criteria) this;
        }

        public Criteria andLanguageEqualTo(String value) {
            addCriterion("Language =", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageNotEqualTo(String value) {
            addCriterion("Language <>", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageGreaterThan(String value) {
            addCriterion("Language >", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageGreaterThanOrEqualTo(String value) {
            addCriterion("Language >=", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageLessThan(String value) {
            addCriterion("Language <", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageLessThanOrEqualTo(String value) {
            addCriterion("Language <=", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageLike(String value) {
            addCriterion("Language like", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageNotLike(String value) {
            addCriterion("Language not like", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageIn(List<String> values) {
            addCriterion("Language in", values, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageNotIn(List<String> values) {
            addCriterion("Language not in", values, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageBetween(String value1, String value2) {
            addCriterion("Language between", value1, value2, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageNotBetween(String value1, String value2) {
            addCriterion("Language not between", value1, value2, "language");
            return (Criteria) this;
        }

        public Criteria andClasstypeIsNull() {
            addCriterion("ClassType is null");
            return (Criteria) this;
        }

        public Criteria andClasstypeIsNotNull() {
            addCriterion("ClassType is not null");
            return (Criteria) this;
        }

        public Criteria andClasstypeEqualTo(Integer value) {
            addCriterion("ClassType =", value, "classtype");
            return (Criteria) this;
        }

        public Criteria andClasstypeNotEqualTo(Integer value) {
            addCriterion("ClassType <>", value, "classtype");
            return (Criteria) this;
        }

        public Criteria andClasstypeGreaterThan(Integer value) {
            addCriterion("ClassType >", value, "classtype");
            return (Criteria) this;
        }

        public Criteria andClasstypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("ClassType >=", value, "classtype");
            return (Criteria) this;
        }

        public Criteria andClasstypeLessThan(Integer value) {
            addCriterion("ClassType <", value, "classtype");
            return (Criteria) this;
        }

        public Criteria andClasstypeLessThanOrEqualTo(Integer value) {
            addCriterion("ClassType <=", value, "classtype");
            return (Criteria) this;
        }

        public Criteria andClasstypeIn(List<Integer> values) {
            addCriterion("ClassType in", values, "classtype");
            return (Criteria) this;
        }

        public Criteria andClasstypeNotIn(List<Integer> values) {
            addCriterion("ClassType not in", values, "classtype");
            return (Criteria) this;
        }

        public Criteria andClasstypeBetween(Integer value1, Integer value2) {
            addCriterion("ClassType between", value1, value2, "classtype");
            return (Criteria) this;
        }

        public Criteria andClasstypeNotBetween(Integer value1, Integer value2) {
            addCriterion("ClassType not between", value1, value2, "classtype");
            return (Criteria) this;
        }

        public Criteria andFishstatjIsNull() {
            addCriterion("FishstatJ is null");
            return (Criteria) this;
        }

        public Criteria andFishstatjIsNotNull() {
            addCriterion("FishstatJ is not null");
            return (Criteria) this;
        }

        public Criteria andFishstatjEqualTo(Integer value) {
            addCriterion("FishstatJ =", value, "fishstatj");
            return (Criteria) this;
        }

        public Criteria andFishstatjNotEqualTo(Integer value) {
            addCriterion("FishstatJ <>", value, "fishstatj");
            return (Criteria) this;
        }

        public Criteria andFishstatjGreaterThan(Integer value) {
            addCriterion("FishstatJ >", value, "fishstatj");
            return (Criteria) this;
        }

        public Criteria andFishstatjGreaterThanOrEqualTo(Integer value) {
            addCriterion("FishstatJ >=", value, "fishstatj");
            return (Criteria) this;
        }

        public Criteria andFishstatjLessThan(Integer value) {
            addCriterion("FishstatJ <", value, "fishstatj");
            return (Criteria) this;
        }

        public Criteria andFishstatjLessThanOrEqualTo(Integer value) {
            addCriterion("FishstatJ <=", value, "fishstatj");
            return (Criteria) this;
        }

        public Criteria andFishstatjIn(List<Integer> values) {
            addCriterion("FishstatJ in", values, "fishstatj");
            return (Criteria) this;
        }

        public Criteria andFishstatjNotIn(List<Integer> values) {
            addCriterion("FishstatJ not in", values, "fishstatj");
            return (Criteria) this;
        }

        public Criteria andFishstatjBetween(Integer value1, Integer value2) {
            addCriterion("FishstatJ between", value1, value2, "fishstatj");
            return (Criteria) this;
        }

        public Criteria andFishstatjNotBetween(Integer value1, Integer value2) {
            addCriterion("FishstatJ not between", value1, value2, "fishstatj");
            return (Criteria) this;
        }

        public Criteria andGeographicIsNull() {
            addCriterion("Geographic is null");
            return (Criteria) this;
        }

        public Criteria andGeographicIsNotNull() {
            addCriterion("Geographic is not null");
            return (Criteria) this;
        }

        public Criteria andGeographicEqualTo(Integer value) {
            addCriterion("Geographic =", value, "geographic");
            return (Criteria) this;
        }

        public Criteria andGeographicNotEqualTo(Integer value) {
            addCriterion("Geographic <>", value, "geographic");
            return (Criteria) this;
        }

        public Criteria andGeographicGreaterThan(Integer value) {
            addCriterion("Geographic >", value, "geographic");
            return (Criteria) this;
        }

        public Criteria andGeographicGreaterThanOrEqualTo(Integer value) {
            addCriterion("Geographic >=", value, "geographic");
            return (Criteria) this;
        }

        public Criteria andGeographicLessThan(Integer value) {
            addCriterion("Geographic <", value, "geographic");
            return (Criteria) this;
        }

        public Criteria andGeographicLessThanOrEqualTo(Integer value) {
            addCriterion("Geographic <=", value, "geographic");
            return (Criteria) this;
        }

        public Criteria andGeographicIn(List<Integer> values) {
            addCriterion("Geographic in", values, "geographic");
            return (Criteria) this;
        }

        public Criteria andGeographicNotIn(List<Integer> values) {
            addCriterion("Geographic not in", values, "geographic");
            return (Criteria) this;
        }

        public Criteria andGeographicBetween(Integer value1, Integer value2) {
            addCriterion("Geographic between", value1, value2, "geographic");
            return (Criteria) this;
        }

        public Criteria andGeographicNotBetween(Integer value1, Integer value2) {
            addCriterion("Geographic not between", value1, value2, "geographic");
            return (Criteria) this;
        }

        public Criteria andRegionIsNull() {
            addCriterion("Region is null");
            return (Criteria) this;
        }

        public Criteria andRegionIsNotNull() {
            addCriterion("Region is not null");
            return (Criteria) this;
        }

        public Criteria andRegionEqualTo(Integer value) {
            addCriterion("Region =", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotEqualTo(Integer value) {
            addCriterion("Region <>", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionGreaterThan(Integer value) {
            addCriterion("Region >", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionGreaterThanOrEqualTo(Integer value) {
            addCriterion("Region >=", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionLessThan(Integer value) {
            addCriterion("Region <", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionLessThanOrEqualTo(Integer value) {
            addCriterion("Region <=", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionIn(List<Integer> values) {
            addCriterion("Region in", values, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotIn(List<Integer> values) {
            addCriterion("Region not in", values, "region");
            return (Criteria) this;
        }

        public Criteria andRegionBetween(Integer value1, Integer value2) {
            addCriterion("Region between", value1, value2, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotBetween(Integer value1, Integer value2) {
            addCriterion("Region not between", value1, value2, "region");
            return (Criteria) this;
        }

        public Criteria andEconomicIsNull() {
            addCriterion("Economic is null");
            return (Criteria) this;
        }

        public Criteria andEconomicIsNotNull() {
            addCriterion("Economic is not null");
            return (Criteria) this;
        }

        public Criteria andEconomicEqualTo(Integer value) {
            addCriterion("Economic =", value, "economic");
            return (Criteria) this;
        }

        public Criteria andEconomicNotEqualTo(Integer value) {
            addCriterion("Economic <>", value, "economic");
            return (Criteria) this;
        }

        public Criteria andEconomicGreaterThan(Integer value) {
            addCriterion("Economic >", value, "economic");
            return (Criteria) this;
        }

        public Criteria andEconomicGreaterThanOrEqualTo(Integer value) {
            addCriterion("Economic >=", value, "economic");
            return (Criteria) this;
        }

        public Criteria andEconomicLessThan(Integer value) {
            addCriterion("Economic <", value, "economic");
            return (Criteria) this;
        }

        public Criteria andEconomicLessThanOrEqualTo(Integer value) {
            addCriterion("Economic <=", value, "economic");
            return (Criteria) this;
        }

        public Criteria andEconomicIn(List<Integer> values) {
            addCriterion("Economic in", values, "economic");
            return (Criteria) this;
        }

        public Criteria andEconomicNotIn(List<Integer> values) {
            addCriterion("Economic not in", values, "economic");
            return (Criteria) this;
        }

        public Criteria andEconomicBetween(Integer value1, Integer value2) {
            addCriterion("Economic between", value1, value2, "economic");
            return (Criteria) this;
        }

        public Criteria andEconomicNotBetween(Integer value1, Integer value2) {
            addCriterion("Economic not between", value1, value2, "economic");
            return (Criteria) this;
        }

        public Criteria andIndustrialIsNull() {
            addCriterion("Industrial is null");
            return (Criteria) this;
        }

        public Criteria andIndustrialIsNotNull() {
            addCriterion("Industrial is not null");
            return (Criteria) this;
        }

        public Criteria andIndustrialEqualTo(String value) {
            addCriterion("Industrial =", value, "industrial");
            return (Criteria) this;
        }

        public Criteria andIndustrialNotEqualTo(String value) {
            addCriterion("Industrial <>", value, "industrial");
            return (Criteria) this;
        }

        public Criteria andIndustrialGreaterThan(String value) {
            addCriterion("Industrial >", value, "industrial");
            return (Criteria) this;
        }

        public Criteria andIndustrialGreaterThanOrEqualTo(String value) {
            addCriterion("Industrial >=", value, "industrial");
            return (Criteria) this;
        }

        public Criteria andIndustrialLessThan(String value) {
            addCriterion("Industrial <", value, "industrial");
            return (Criteria) this;
        }

        public Criteria andIndustrialLessThanOrEqualTo(String value) {
            addCriterion("Industrial <=", value, "industrial");
            return (Criteria) this;
        }

        public Criteria andIndustrialLike(String value) {
            addCriterion("Industrial like", value, "industrial");
            return (Criteria) this;
        }

        public Criteria andIndustrialNotLike(String value) {
            addCriterion("Industrial not like", value, "industrial");
            return (Criteria) this;
        }

        public Criteria andIndustrialIn(List<String> values) {
            addCriterion("Industrial in", values, "industrial");
            return (Criteria) this;
        }

        public Criteria andIndustrialNotIn(List<String> values) {
            addCriterion("Industrial not in", values, "industrial");
            return (Criteria) this;
        }

        public Criteria andIndustrialBetween(String value1, String value2) {
            addCriterion("Industrial between", value1, value2, "industrial");
            return (Criteria) this;
        }

        public Criteria andIndustrialNotBetween(String value1, String value2) {
            addCriterion("Industrial not between", value1, value2, "industrial");
            return (Criteria) this;
        }

        public Criteria andLowincomeIsNull() {
            addCriterion("LowIncome is null");
            return (Criteria) this;
        }

        public Criteria andLowincomeIsNotNull() {
            addCriterion("LowIncome is not null");
            return (Criteria) this;
        }

        public Criteria andLowincomeEqualTo(String value) {
            addCriterion("LowIncome =", value, "lowincome");
            return (Criteria) this;
        }

        public Criteria andLowincomeNotEqualTo(String value) {
            addCriterion("LowIncome <>", value, "lowincome");
            return (Criteria) this;
        }

        public Criteria andLowincomeGreaterThan(String value) {
            addCriterion("LowIncome >", value, "lowincome");
            return (Criteria) this;
        }

        public Criteria andLowincomeGreaterThanOrEqualTo(String value) {
            addCriterion("LowIncome >=", value, "lowincome");
            return (Criteria) this;
        }

        public Criteria andLowincomeLessThan(String value) {
            addCriterion("LowIncome <", value, "lowincome");
            return (Criteria) this;
        }

        public Criteria andLowincomeLessThanOrEqualTo(String value) {
            addCriterion("LowIncome <=", value, "lowincome");
            return (Criteria) this;
        }

        public Criteria andLowincomeLike(String value) {
            addCriterion("LowIncome like", value, "lowincome");
            return (Criteria) this;
        }

        public Criteria andLowincomeNotLike(String value) {
            addCriterion("LowIncome not like", value, "lowincome");
            return (Criteria) this;
        }

        public Criteria andLowincomeIn(List<String> values) {
            addCriterion("LowIncome in", values, "lowincome");
            return (Criteria) this;
        }

        public Criteria andLowincomeNotIn(List<String> values) {
            addCriterion("LowIncome not in", values, "lowincome");
            return (Criteria) this;
        }

        public Criteria andLowincomeBetween(String value1, String value2) {
            addCriterion("LowIncome between", value1, value2, "lowincome");
            return (Criteria) this;
        }

        public Criteria andLowincomeNotBetween(String value1, String value2) {
            addCriterion("LowIncome not between", value1, value2, "lowincome");
            return (Criteria) this;
        }

        public Criteria andEnglishIsNull() {
            addCriterion("English is null");
            return (Criteria) this;
        }

        public Criteria andEnglishIsNotNull() {
            addCriterion("English is not null");
            return (Criteria) this;
        }

        public Criteria andEnglishEqualTo(String value) {
            addCriterion("English =", value, "english");
            return (Criteria) this;
        }

        public Criteria andEnglishNotEqualTo(String value) {
            addCriterion("English <>", value, "english");
            return (Criteria) this;
        }

        public Criteria andEnglishGreaterThan(String value) {
            addCriterion("English >", value, "english");
            return (Criteria) this;
        }

        public Criteria andEnglishGreaterThanOrEqualTo(String value) {
            addCriterion("English >=", value, "english");
            return (Criteria) this;
        }

        public Criteria andEnglishLessThan(String value) {
            addCriterion("English <", value, "english");
            return (Criteria) this;
        }

        public Criteria andEnglishLessThanOrEqualTo(String value) {
            addCriterion("English <=", value, "english");
            return (Criteria) this;
        }

        public Criteria andEnglishLike(String value) {
            addCriterion("English like", value, "english");
            return (Criteria) this;
        }

        public Criteria andEnglishNotLike(String value) {
            addCriterion("English not like", value, "english");
            return (Criteria) this;
        }

        public Criteria andEnglishIn(List<String> values) {
            addCriterion("English in", values, "english");
            return (Criteria) this;
        }

        public Criteria andEnglishNotIn(List<String> values) {
            addCriterion("English not in", values, "english");
            return (Criteria) this;
        }

        public Criteria andEnglishBetween(String value1, String value2) {
            addCriterion("English between", value1, value2, "english");
            return (Criteria) this;
        }

        public Criteria andEnglishNotBetween(String value1, String value2) {
            addCriterion("English not between", value1, value2, "english");
            return (Criteria) this;
        }

        public Criteria andFrenchIsNull() {
            addCriterion("French is null");
            return (Criteria) this;
        }

        public Criteria andFrenchIsNotNull() {
            addCriterion("French is not null");
            return (Criteria) this;
        }

        public Criteria andFrenchEqualTo(String value) {
            addCriterion("French =", value, "french");
            return (Criteria) this;
        }

        public Criteria andFrenchNotEqualTo(String value) {
            addCriterion("French <>", value, "french");
            return (Criteria) this;
        }

        public Criteria andFrenchGreaterThan(String value) {
            addCriterion("French >", value, "french");
            return (Criteria) this;
        }

        public Criteria andFrenchGreaterThanOrEqualTo(String value) {
            addCriterion("French >=", value, "french");
            return (Criteria) this;
        }

        public Criteria andFrenchLessThan(String value) {
            addCriterion("French <", value, "french");
            return (Criteria) this;
        }

        public Criteria andFrenchLessThanOrEqualTo(String value) {
            addCriterion("French <=", value, "french");
            return (Criteria) this;
        }

        public Criteria andFrenchLike(String value) {
            addCriterion("French like", value, "french");
            return (Criteria) this;
        }

        public Criteria andFrenchNotLike(String value) {
            addCriterion("French not like", value, "french");
            return (Criteria) this;
        }

        public Criteria andFrenchIn(List<String> values) {
            addCriterion("French in", values, "french");
            return (Criteria) this;
        }

        public Criteria andFrenchNotIn(List<String> values) {
            addCriterion("French not in", values, "french");
            return (Criteria) this;
        }

        public Criteria andFrenchBetween(String value1, String value2) {
            addCriterion("French between", value1, value2, "french");
            return (Criteria) this;
        }

        public Criteria andFrenchNotBetween(String value1, String value2) {
            addCriterion("French not between", value1, value2, "french");
            return (Criteria) this;
        }

        public Criteria andSpanishIsNull() {
            addCriterion("Spanish is null");
            return (Criteria) this;
        }

        public Criteria andSpanishIsNotNull() {
            addCriterion("Spanish is not null");
            return (Criteria) this;
        }

        public Criteria andSpanishEqualTo(String value) {
            addCriterion("Spanish =", value, "spanish");
            return (Criteria) this;
        }

        public Criteria andSpanishNotEqualTo(String value) {
            addCriterion("Spanish <>", value, "spanish");
            return (Criteria) this;
        }

        public Criteria andSpanishGreaterThan(String value) {
            addCriterion("Spanish >", value, "spanish");
            return (Criteria) this;
        }

        public Criteria andSpanishGreaterThanOrEqualTo(String value) {
            addCriterion("Spanish >=", value, "spanish");
            return (Criteria) this;
        }

        public Criteria andSpanishLessThan(String value) {
            addCriterion("Spanish <", value, "spanish");
            return (Criteria) this;
        }

        public Criteria andSpanishLessThanOrEqualTo(String value) {
            addCriterion("Spanish <=", value, "spanish");
            return (Criteria) this;
        }

        public Criteria andSpanishLike(String value) {
            addCriterion("Spanish like", value, "spanish");
            return (Criteria) this;
        }

        public Criteria andSpanishNotLike(String value) {
            addCriterion("Spanish not like", value, "spanish");
            return (Criteria) this;
        }

        public Criteria andSpanishIn(List<String> values) {
            addCriterion("Spanish in", values, "spanish");
            return (Criteria) this;
        }

        public Criteria andSpanishNotIn(List<String> values) {
            addCriterion("Spanish not in", values, "spanish");
            return (Criteria) this;
        }

        public Criteria andSpanishBetween(String value1, String value2) {
            addCriterion("Spanish between", value1, value2, "spanish");
            return (Criteria) this;
        }

        public Criteria andSpanishNotBetween(String value1, String value2) {
            addCriterion("Spanish not between", value1, value2, "spanish");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated do_not_delete_during_merge Tue Oct 10 14:03:47 CEST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.Countries_info_new
     *
     * @mbg.generated Tue Oct 10 14:03:47 CEST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}